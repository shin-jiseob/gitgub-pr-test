FROM openjdk:17-alpine
LABEL maintainer="Stockeeper Engineering"

# Set KST
ENV TZ=Asia/Seoul
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

ARG ACTIVE_PROFILE
ENV ACTIVE_PROFILE=$ACTIVE_PROFILE
ARG NICE_CERT_SITE_CODE
ENV NICE_CERT_SITE_CODE=$NICE_CERT_SITE_CODE
ARG NICE_CERT_SITE_PASSWORD
ENV NICE_CERT_SITE_PASSWORD=$NICE_CERT_SITE_PASSWORD
ARG NICE_ACCESS_TOKEN
ENV NICE_ACCESS_TOKEN=$NICE_ACCESS_TOKEN
ARG NICE_CLIENT_ID
ENV NICE_CLIENT_ID=$NICE_CLIENT_ID
ARG NICE_NAME_CHECK_PRODUCT_ID
ENV NICE_NAME_CHECK_PRODUCT_ID=$NICE_NAME_CHECK_PRODUCT_ID
ARG NICE_NAME_FOREIGNER_CHECK_PRODUCT_ID
ENV NICE_NAME_FOREIGNER_CHECK_PRODUCT_ID=$NICE_NAME_FOREIGNER_CHECK_PRODUCT_ID
ARG NICE_ACCOUNT_OTP_PRODUCT_ID
ENV NICE_ACCOUNT_OTP_PRODUCT_ID=$NICE_ACCOUNT_OTP_PRODUCT_ID
ARG OPENAPI_SERVICE_KEY
ENV OPENAPI_SERVICE_KEY=$OPENAPI_SERVICE_KEY
ARG PUSH_API_KEY
ENV PUSH_API_KEY=$PUSH_API_KEY
ARG DB_URL
ENV DB_URL=$DB_URL
ARG DB_PORT
ENV DB_PORT=$DB_PORT
ARG DB_DATABASE
ENV DB_DATABASE=$DB_DATABASE
ARG DB_USERNAME
ENV DB_USERNAME=$DB_USERNAME
ARG DB_PASSWORD
ENV DB_PASSWORD=$DB_PASSWORD
ARG ACCESS_TOKEN_SECRET_KEY
ENV ACCESS_TOKEN_SECRET_KEY=$ACCESS_TOKEN_SECRET_KEY
ARG REFRESH_TOKEN_SECRET_KEY
ENV REFRESH_TOKEN_SECRET_KEY=$REFRESH_TOKEN_SECRET_KEY
ARG DATA_ENCRYPT_SECRET_KEY
ENV DATA_ENCRYPT_SECRET_KEY=$DATA_ENCRYPT_SECRET_KEY
ARG AWS_ACCESS_KEY
ENV AWS_ACCESS_KEY=$AWS_ACCESS_KEY
ARG AWS_SECRET_KEY
ENV AWS_SECRET_KEY=$AWS_SECRET_KEY
ARG AWS_S3_BUCKET
ENV AWS_S3_BUCKET=$AWS_S3_BUCKET
ARG BAROBILL_CERT_KEY
ENV BAROBILL_CERT_KEY=$BAROBILL_CERT_KEY
ARG TOSS_OAUTH2_CLIENT_ID
ENV TOSS_OAUTH2_CLIENT_ID=$TOSS_OAUTH2_CLIENT_ID
ARG TOSS_OAUTH2_CLIENT_SECRET
ENV TOSS_OAUTH2_CLIENT_SECRET=$TOSS_OAUTH2_CLIENT_SECRET
ARG TOSS_CERT_CLIENT_ID
ENV TOSS_CERT_CLIENT_ID=$TOSS_CERT_CLIENT_ID
ARG TOSS_CERT_CLIENT_SECRET
ENV TOSS_CERT_CLIENT_SECRET=$TOSS_CERT_CLIENT_SECRET

# Jar 파일 경로
ARG JAR_FILE_PATH=build/libs/*.war

# Jar 파일 복제
COPY ${JAR_FILE_PATH} app.war

# Java Options 설정
ARG JAVA_OPTS="$JAVA_OPTS -Djava.net.preferIPv4Stack=true -Dspring.profiles.active=$ACTIVE_PROFILE"

# Datadog agent 다운로드
RUN mkdir -p /jarDir
ADD 'https://dtdg.co/latest-java-tracer' /jarDir/dd-java-agent.jar

# Datadog 설정
ENV DATADOG_PARAMS="\
-javaagent:/jarDir/dd-java-agent.jar \
-Ddd.version=bancow-core2.0 \
-Ddd.profiling.enabled=false \
-Ddd.logs.injection=false \
-Ddd.service=bancow-core-api \
-Ddd.env=${ACTIVE_PROFILE} \
-Ddd.trace.header.tags=Authorization,X-Forwarded-For,test \
-Ddd.service.mapping=mysql:db.mysql \
-Ddd.http.server.tag.query-string=true \
-Ddd.tags=g.name:global-name,g.desc:global-desc \
-Ddd.integration.jdbc-datasource.enabled=true \
"

RUN echo "ACTIVE_PROFILE=${ACTIVE_PROFILE}"
RUN echo "JAVA_OPTS=${JAVA_OPTS}"

ENTRYPOINT ["sh", "-c", "java ${DATADOG_PARAMS} ${JAVA_OPTS} -jar app.war"]